// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Data;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Models.ConfigColor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Color");
                });

            modelBuilder.Entity("Models.ConfigEngine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<float>("Co2Emission")
                        .HasColumnType("float");

                    b.Property<float>("FuelConsumption")
                        .HasColumnType("float");

                    b.Property<string>("FuelType")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Horsepower")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Engine");

                    b.HasData(
                        new
                        {
                            Id = -1141036713,
                            Co2Emission = 136f,
                            FuelConsumption = 6f,
                            FuelType = "Benzin",
                            Horsepower = 115,
                            Name = "1.5 TSI"
                        },
                        new
                        {
                            Id = -1849575583,
                            Co2Emission = 140f,
                            FuelConsumption = 6.1f,
                            FuelType = "Benzin",
                            Horsepower = 150,
                            Name = "1.5 TSI"
                        },
                        new
                        {
                            Id = -1675476351,
                            Co2Emission = 124f,
                            FuelConsumption = 5.4f,
                            FuelType = "Benzin(mild) Hybrid",
                            Horsepower = 150,
                            Name = "1.5 eTSI"
                        },
                        new
                        {
                            Id = -1903551708,
                            Co2Emission = 128f,
                            FuelConsumption = 4.8f,
                            FuelType = "Gázolaj",
                            Horsepower = 150,
                            Name = "2.0 TDI"
                        },
                        new
                        {
                            Id = -1387151262,
                            Co2Emission = 6f,
                            FuelConsumption = 0.3f,
                            FuelType = "Kombinált: benzin és elektromotor",
                            Horsepower = 150,
                            Name = "1.5 TSI Plug-In-Hybrid"
                        },
                        new
                        {
                            Id = -975315509,
                            Co2Emission = 170f,
                            FuelConsumption = 7.5f,
                            FuelType = "Benzin",
                            Horsepower = 265,
                            Name = "2.0 TSI"
                        },
                        new
                        {
                            Id = -1112420233,
                            Co2Emission = 180f,
                            FuelConsumption = 7.9f,
                            FuelType = "Benzin",
                            Horsepower = 300,
                            Name = "2.0 TSI"
                        },
                        new
                        {
                            Id = -1249376216,
                            Co2Emission = 192f,
                            FuelConsumption = 8.5f,
                            FuelType = "Benzin",
                            Horsepower = 333,
                            Name = "2.0 TSI"
                        });
                });

            modelBuilder.Entity("Models.ConfigTransmissionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("WheelDrive")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("TransmissionType");
                });

            modelBuilder.Entity("Models.Configuration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CarpetType")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<float?>("Co2Emission")
                        .HasColumnType("float");

                    b.Property<int?>("Color_idId")
                        .HasColumnType("int");

                    b.Property<string>("ConfigName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Engine_idId")
                        .HasColumnType("int");

                    b.Property<float?>("FuelConsumption")
                        .HasColumnType("float");

                    b.Property<string>("FuelType")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("Horsepower")
                        .HasColumnType("int");

                    b.Property<int?>("TransmissionTpye_idId")
                        .HasColumnType("int");

                    b.Property<int>("User_idId")
                        .HasColumnType("int");

                    b.Property<string>("VehicleType")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("WheelDrive")
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("WheelType")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("YearProd")
                        .HasColumnType("int");

                    b.Property<int?>("totalCost")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Color_idId");

                    b.HasIndex("Engine_idId");

                    b.HasIndex("TransmissionTpye_idId");

                    b.HasIndex("User_idId");

                    b.ToTable("Configuration");
                });

            modelBuilder.Entity("Models.MainPage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Chairman")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<int?>("Employees")
                        .HasColumnType("int");

                    b.Property<string>("Factories")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("Founded")
                        .HasColumnType("int");

                    b.Property<string>("Headquarters")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("History")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Owner")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Products")
                        .HasColumnType("longtext");

                    b.Property<int?>("Profit")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("MainPage");
                });

            modelBuilder.Entity("Models.PastModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Engine")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("Horsepower")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("ReleaseDate")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("PastCar");
                });

            modelBuilder.Entity("Models.Sale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<float?>("TotalIncome")
                        .HasColumnType("float");

                    b.Property<float?>("TotalSale")
                        .HasColumnType("float");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Sale");
                });

            modelBuilder.Entity("Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("User");
                });

            modelBuilder.Entity("Models.Configuration", b =>
                {
                    b.HasOne("Models.ConfigColor", "Color_id")
                        .WithMany()
                        .HasForeignKey("Color_idId");

                    b.HasOne("Models.ConfigEngine", "Engine_id")
                        .WithMany()
                        .HasForeignKey("Engine_idId");

                    b.HasOne("Models.ConfigTransmissionType", "TransmissionTpye_id")
                        .WithMany()
                        .HasForeignKey("TransmissionTpye_idId");

                    b.HasOne("Models.User", "User_id")
                        .WithMany()
                        .HasForeignKey("User_idId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Color_id");

                    b.Navigation("Engine_id");

                    b.Navigation("TransmissionTpye_id");

                    b.Navigation("User_id");
                });
#pragma warning restore 612, 618
        }
    }
}
